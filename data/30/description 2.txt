In the knapsack problem, one needs to pack a set of items in a container. Each item k has a value value_k and a size size_k. The container has a maximum capacity C. If the total size of the items exceeds the capacity, we canâ€™t pack them all. In that case, the problem is to choose a subset of the items with the maximum total value that will fit in the container.

The decision variables are binary variables isincluded_k, which take value 1 if item k is included in the container and 0 otherwise.

The objective is to maximize the total value of the packed items:

maximize sum over k of value_k * isincluded_k

subject to the constraint:

sum over k of size_k * isincluded_k <= C
